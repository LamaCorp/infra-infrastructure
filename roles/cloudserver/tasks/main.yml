---

- name: Deploy Cloudserver docker-compose
  ansible.builtin.include_role:
    name: docker_compose
  vars:
    docker_compose_project_name: cloudserver
    docker_compose_services:
      cloudserver:
        image: "{{ cloudserver_docker_repository }}:{{ cloudserver_docker_tag }}"
        volumes:
          - data:/data
          - meta:/meta
          - config:/config
        environment:
          S3_CONFIG_FILE: /config/config.json
          S3AUTH_CONFIG: /config/authdata.json
          S3_LOCATION_FILE: /config/locationConfig.json
          S3DATAPATH: /data
          S3METADATAPATH: /meta
        reverse_proxy: "{{ cloudserver_reverse_proxy_computed }}"
    docker_compose_volumes_dir_owner: root
    docker_compose_volumes_dir_group: root
    docker_compose_volumes_dir_mode: 0700

- name: Ensure cloudserver config is up-to-date
  ansible.builtin.copy:
    content: "{{ cloudserver_config_computed | ansible.builtin.to_nice_json }}"
    dest: /srv/cloudserver/volumes/config/config.json
    owner: root
    group: root
    mode: 0600
  notify: Restart docker-compose

- name: Ensure cloudserver locationConfig is up-to-date
  ansible.builtin.copy:
    content: "{{ cloudserver_location_config_computed | ansible.builtin.to_nice_json }}"
    dest: /srv/cloudserver/volumes/config/locationConfig.json
    owner: root
    group: root
    mode: 0600
  notify: Restart docker-compose

- name: Ensure cloudserver authdata is up-to-date
  ansible.builtin.copy:
    content: "{{ cloudserver_authdata | ansible.builtin.to_nice_json }}"
    dest: /srv/cloudserver/volumes/config/authdata.json
    owner: root
    group: root
    mode: 0600
  notify: Restart docker-compose
