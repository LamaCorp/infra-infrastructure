---
servarr_media_user_uid: 3000
servarr_media_user_gid: 3000

servarr_default_environment:
  PUID: "{{ servarr_media_user_uid }}"
  PGID: "{{ servarr_media_user_gid }}"
  UMASK: "002"
  TZ: Europe/Paris

servarr_environment: {}
servarr_environment_computed: "{{ servarr_default_environment | combine(servarr_environment) }}"

# servarr_api_key: ""

servarr_default_config:
  Config:
    AnalyticsEnabled: "False"
    BindAddress: "*"
    Branch: master
    EnableSsl: "False"
    LaunchBrowser: "False"
    LogLevel: info
    SslPort: "4242"
    UpdateMechanism: Docker
    UrlBase: ""

servarr_config: {}
servarr_config_computed: "{{ servarr_default_config | combine(servarr_config, recursive=True) }}"

lidarr_docker_repository: ghcr.io/hotio/lidarr
lidarr_docker_tag: testing-1.1.4.3027

# lidarr_domain: ""

lidarr_default_reverse_proxy:
  enable: true
  router:
    rule: "Host(`{{ lidarr_domain }}`)"
    middlewares: "default@file"
  service:
    port: 8686

lidarr_reverse_proxy: {}
lidarr_reverse_proxy_computed: "{{ lidarr_default_reverse_proxy | combine(lidarr_reverse_proxy, recursive=True) }}"

lidarr_default_environment: {}
lidarr_environment: {}
lidarr_environment_computed: "{{ servarr_environment_computed | combine(lidarr_default_environment) | combine(lidarr_environment) }}"

lidarr_api_key: "{{ servarr_api_key }}"

lidarr_postgresql_host: "{{ services_db_host }}"
# lidarr_postgresql_user: ""
# lidarr_postgresql_password: ""
# lidarr_postgresql_main_database: ""
# lidarr_postgresql_log_database: ""

lidarr_default_config:
  Config:
    ApiKey: "{{ lidarr_api_key }}"
    AuthenticationMethod: None
    Branch: develop
    InstanceName: Lidarr
    Port: "8686"
    PostgresHost: "{{ lidarr_postgresql_host }}"
    PostgresLogDb: "{{ lidarr_postgresql_log_database }}"
    PostgresMainDb: "{{ lidarr_postgresql_main_database }}"
    PostgresPassword: "{{ lidarr_postgresql_password }}"
    PostgresPort: "5432"
    PostgresUser: "{{ lidarr_postgresql_user }}"
    SslCertPassword: ""
    SslCertPath: ""

lidarr_config: {}
lidarr_config_computed: "{{ servarr_config_computed | combine(lidarr_default_config, recursive=True) | combine(lidarr_config, recursive=True) }}"

prowlarr_docker_repository: ghcr.io/hotio/prowlarr
prowlarr_docker_tag: release-1.4.1.3258

# prowlarr_domain: ""

prowlarr_default_reverse_proxy:
  enable: true
  router:
    rule: "Host(`{{ prowlarr_domain }}`)"
    middlewares: "default@file"
  service:
    port: 9696

prowlarr_reverse_proxy: {}
prowlarr_reverse_proxy_computed: "{{ prowlarr_default_reverse_proxy | combine(prowlarr_reverse_proxy, recursive=True) }}"

prowlarr_default_environment: {}
prowlarr_environment: {}
prowlarr_environment_computed: "{{ servarr_environment_computed | combine(prowlarr_default_environment) | combine(prowlarr_environment) }}"

prowlarr_api_key: "{{ servarr_api_key }}"

prowlarr_postgresql_host: "{{ services_db_host }}"
# prowlarr_postgresql_user: ""
# prowlarr_postgresql_password: ""
# prowlarr_postgresql_main_database: ""
# prowlarr_postgresql_log_database: ""

prowlarr_default_config:
  Config:
    ApiKey: "{{ prowlarr_api_key }}"
    AuthenticationMethod: External
    AuthenticationRequired: Enabled
    InstanceName: Prowlarr
    Port: "9696"
    PostgresHost: "{{ prowlarr_postgresql_host }}"
    PostgresLogDb: "{{ prowlarr_postgresql_log_database }}"
    PostgresMainDb: "{{ prowlarr_postgresql_main_database }}"
    PostgresPassword: "{{ prowlarr_postgresql_password }}"
    PostgresPort: "5432"
    PostgresUser: "{{ prowlarr_postgresql_user }}"
    SslCertPassword: ""
    SslCertPath: ""

prowlarr_config: {}
prowlarr_config_computed: "{{ servarr_config_computed | combine(prowlarr_default_config, recursive=True) | combine(prowlarr_config, recursive=True) }}"

sonarr_docker_repository: ghcr.io/hotio/sonarr
sonarr_docker_tag: release-3.0.10.1567

# sonarr_domain: ""

sonarr_default_reverse_proxy:
  enable: true
  router:
    rule: "Host(`{{ sonarr_domain }}`)"
    middlewares: "default@file"
  service:
    port: 8989

sonarr_reverse_proxy: {}
sonarr_reverse_proxy_computed: "{{ sonarr_default_reverse_proxy | combine(sonarr_reverse_proxy, recursive=True) }}"

sonarr_default_environment: {}
sonarr_environment: {}
sonarr_environment_computed: "{{ servarr_environment_computed | combine(sonarr_default_environment) | combine(sonarr_environment) }}"

sonarr_api_key: "{{ servarr_api_key }}"

sonarr_default_config:
  Config:
    ApiKey: "{{ sonarr_api_key }}"
    AuthenticationMethod: "None"
    Branch: main
    InstanceName: Sonarr
    Port: "8989"
    SslCertHash: ""
    SyslogPort: "514"

sonarr_config: {}
sonarr_config_computed: "{{ servarr_config_computed | combine(sonarr_default_config, recursive=True) | combine(sonarr_config, recursive=True) }}"

radarr_docker_repository: ghcr.io/hotio/radarr
radarr_docker_tag: release-4.5.2.7388

# radarr_domain: ""

radarr_default_reverse_proxy:
  enable: true
  router:
    rule: "Host(`{{ radarr_domain }}`)"
    middlewares: "default@file"
  service:
    port: 7878

radarr_reverse_proxy: {}
radarr_reverse_proxy_computed: "{{ radarr_default_reverse_proxy | combine(radarr_reverse_proxy, recursive=True) }}"

radarr_default_environment: {}
radarr_environment: {}
radarr_environment_computed: "{{ servarr_environment_computed | combine(radarr_default_environment) | combine(radarr_environment) }}"

radarr_api_key: "{{ servarr_api_key }}"

radarr_postgresql_host: "{{ services_db_host }}"
# radarr_postgresql_user: ""
# radarr_postgresql_password: ""
# radarr_postgresql_main_database: ""
# radarr_postgresql_log_database: ""

radarr_default_config:
  Config:
    ApiKey: "{{ radarr_api_key }}"
    AuthenticationMethod: "None"
    InstanceName: Radarr
    Port: "7878"
    PostgresHost: "{{ radarr_postgresql_host }}"
    PostgresLogDb: "{{ radarr_postgresql_log_database }}"
    PostgresMainDb: "{{ radarr_postgresql_main_database }}"
    PostgresPassword: "{{ radarr_postgresql_password }}"
    PostgresPort: "5432"
    PostgresUser: "{{ radarr_postgresql_user }}"
    SslCertPassword: ""
    SslCertPath: ""

radarr_config: {}
radarr_config_computed: "{{ servarr_config_computed | combine(radarr_default_config, recursive=True) | combine(radarr_config, recursive=True) }}"

readarr_docker_repository: ghcr.io/hotio/readarr
readarr_docker_tag: testing-0.1.6.1867

# readarr_domain: ""

readarr_default_reverse_proxy:
  enable: true
  router:
    rule: "Host(`{{ readarr_domain }}`)"
    middlewares: "default@file"
  service:
    port: 8787

readarr_reverse_proxy: {}
readarr_reverse_proxy_computed: "{{ readarr_default_reverse_proxy | combine(readarr_reverse_proxy, recursive=True) }}"

readarr_default_environment: {}
readarr_environment: {}
readarr_environment_computed: "{{ servarr_environment_computed | combine(readarr_default_environment) | combine(readarr_environment) }}"

readarr_api_key: "{{ servarr_api_key }}"

readarr_postgresql_host: "{{ services_db_host }}"
# readarr_postgresql_user: ""
# readarr_postgresql_password: ""
# readarr_postgresql_main_database: ""
# readarr_postgresql_log_database: ""
# readarr_postgresql_cache_database: ""

readarr_default_config:
  Config:
    ApiKey: "{{ readarr_api_key }}"
    AuthenticationMethod: "None"
    Branch: develop
    InstanceName: Readarr
    Port: "8787"
    PostgresHost: "{{ readarr_postgresql_host }}"
    PostgresCacheDb: "{{ readarr_postgresql_cache_database }}"
    PostgresLogDb: "{{ readarr_postgresql_log_database }}"
    PostgresMainDb: "{{ readarr_postgresql_main_database }}"
    PostgresPassword: "{{ readarr_postgresql_password }}"
    PostgresPort: "5432"
    PostgresUser: "{{ readarr_postgresql_user }}"
    SslCertPassword: ""
    SslCertPath: ""

readarr_config: {}
readarr_config_computed: "{{ servarr_config_computed | combine(readarr_default_config, recursive=True) | combine(readarr_config, recursive=True) }}"

recyclarr_docker_repository: ghcr.io/recyclarr/recyclarr
recyclarr_docker_tag: 4.4.1

recyclarr_default_config:
  radarr:
    movies:
      base_url: http://servarr_radarr:7878
      api_key: "{{ radarr_api_key }}"

      quality_definition:
        type: movie

      replace_existing_custom_formats: true
      delete_old_custom_formats: true

      custom_formats:
        ###
        # HB Bluray + WEB
        ###

        - quality_profiles:
            - name: EN - HD Bluray + WEB
            - name: FR + EN - HD Bluray + WEB
          trash_ids:
            # Movie Versions
            - 0f12c086e289cf966fa5948eac571f44 # Hybrid
            - 570bc9ebecd92723d2d21500f4be314c # Remaster
            - eca37840c13c6ef2dd0262b141a5482f # 4K Remaster
            - e0c07d59beb37348e975a930d5e50319 # Criterion Collection
            - 9d27d9d2181838f76dee150882bdc58c # Masters of Cinema
            - 957d0f44b592285f26449575e8b1167e # Special Edition
            - eecf3a857724171f968a66cb5719e152 # IMAX
            - 9f6cbff8cfe4ebbc1bde14c7b7bec0de # IMAX Enhanced
              # HQ Release Groups
            - ed27ebfef2f323e964fb1f61391bcb35 # HD Bluray Tier 01
            - c20c8647f2746a1f4c4262b0fbbeeeae # HD Bluray Tier 02
            - c20f169ef63c5f40c2def54abaf4438e # WEB Tier 01
            - 403816d65392c79236dcb6dd591aeda4 # WEB Tier 02
            - af94e0fe497124d1f9ce732069ec8c3b # WEB Tier 03
              # Misc
            - e7718d7a3ce595f289bfee26adc178f5 # Repack/Proper
            - ae43b294509409a6a13919dedd4764c4 # Repack2
              # Unwanted
            - ed38b889b31be83fda192888e2286d83 # BR-DISK
            - 90a6f9a284dff5103f6346090e6280c8 # LQ
            - dc98083864ea246d05a42df0d05f81cc # x265 (HD)
            - b8cd450cbfa689c0259a01d9e29ba3d6 # 3D
              # Streaming services
            - b3b3a6ac74ecbd56bcdbefa4799fb9df # AMZN
            - 40e9380490e748672c2522eaaeb692f7 # ATVP
            - cc5e51a9e85a6296ceefe097a77f12f4 # BCORE
            - 84272245b2988854bfb76a16e60baea5 # DSNP
            - 509e5f41146e278f9eab1ddaceb34515 # HBO
            - 5763d1b0ce84aff3b21038eea8e9b8ad # HMAX
            - 526d445d4c16214309f0fd2b3be18a89 # Hulu
            - 2a6039655313bf5dab1e43523b62c374 # MA
            - 170b1d363bd8516fbf3a3eb05d4faff6 # NF
            - bf7e73dd1d85b12cc527dc619761c840 # Pathe
            - c9fd353f8f5f1baf56dc601c4cb29920 # PCOK
            - e36a0ba1bc902b26ee40818a1d59b8bd # PMTP
            - c2863d2a50c9acad1fb50e53ece60817 # STAN

        - quality_profiles:
            - name: FR + EN - HD Bluray + WEB
          trash_ids:
            # Multi audio
            - 72b1548df1ac3175ca105a9ce7043c91 # Multi-Audio
            - 6d27683346c78d6a3f772e30877910a7 # French Audio
            - d5f3a1afdb77e6b95e489f7654532d04 # Multi-French
            # HQ Source Groups
            - 5322da05b19d857acc1e75be3edf47b3 # FR HD Bluray Tier 01
            - 57f34251344be2e283fc30e00e458be6 # FR HD Bluray Tier 02
            - 9790a618cec1aeac8ce75601a17ea40d # FR WEB Tier 01
            - 3c83a765f84239716bd5fd2d7af188f9 # FR WEB Tier 02
            - 0d94489c0d5828cd3bf9409d309fb32b # FR Scene Groups

  sonarr:
    series:
      base_url: http://servarr_sonarr:8989
      api_key: "{{ sonarr_api_key }}"

      quality_definition:
        type: series

      replace_existing_custom_formats: true
      delete_old_custom_formats: true

      release_profiles:
        - trash_ids:
            - 1B018E0C53EC825085DD911102E2CA36 # Release Sources (Streaming Service)
            - 71899E6C303A07AF0E4746EFF9873532 # P2P Groups + Repack/Proper
            - EBC725268D687D588A20CBC5F97E538B # Low Quality Groups
            - 76e060895c5b8a765c310933da0a5357 # Optionals

recyclarr_config: {}
recyclarr_config_computed: "{{ recyclarr_default_config | combine(recyclarr_config, recursive=True) }}"
