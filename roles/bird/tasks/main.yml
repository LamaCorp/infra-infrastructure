---
- name: Ensure bird2 package is installed
  ansible.builtin.apt:
    name: bird2

- name: Ensure bgpq4 package is installed
  ansible.builtin.apt:
    name: bgpq4

- name: Setup some sysctls
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: true
    sysctl_set: true
    sysctl_file: /etc/sysctl.d/81-bird.conf
  loop:
    - name: net.ipv6.route.max_size
      value: "1073741824"
    - name: net.core.rmem_default
      value: "4194304"

- name: Compute BGP sessions list
  ansible.builtin.set_fact:
    bird_bgp_sessions_list: "{{ bird_bgp_sessions | make_bgp_sessions_list }}"

- name: Compute BGP IRRs dict
  ansible.builtin.set_fact:
    bird_bgp_irr_dict: "{{ bird_bgp_irr_dict | d({}) | combine({session.irr + session.protocol: {'name': session.irr, 'formatted': session.irr_formatted, 'protocol_number': session.protocol_number, 'bgpq4_cmd': session.bgpq4_cmd}}) }}"
  when: session.irr is defined
  loop: "{{ bird_bgp_sessions_list }}"
  loop_control:
    loop_var: session

- name: Compute BGP IRRs list
  ansible.builtin.set_fact:
    bird_bgp_irr_list: "{{ bird_bgp_irr_dict | d({}) | dict2items | map(attribute='value') }}"

- name: Ensure configuration is up-to-date
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/bird/{{ item }}"
    owner: bird
    group: bird
    mode: 0640
    trim_blocks: true
    lstrip_blocks: true
  loop:
    - bird.conf
    - static.conf
    - bgp.conf
    - peers.conf
    - ospf.conf
    - radv.conf
  notify: Reload bird

- name: Ensure prefixes filters folder exists
  ansible.builtin.file:
    path: /etc/bird/filters/prefixes
    state: directory
    owner: bird
    group: bird
    mode: 0750
    recurse: true

- name: List currently installed bird prefixes filters units
  ansible.builtin.find:
    path: /etc/systemd/system
    patterns: "bird-prefixes-filter-gen-*"
  register: bird_bgp_prefixes_filter_gen_units_currently_installed
- name: Add currently installed bird prefixes filters units to dict
  ansible.builtin.set_fact:
    bird_bgp_prefixes_filter_gen_units_to_keep: "{{ bird_bgp_prefixes_filter_gen_units_to_keep | default({}) | combine({item: false}) }}"
  loop: "{{ bird_bgp_prefixes_filter_gen_units_currently_installed.files | map(attribute='path') | list }}"

- name: List currently installed bird prefixes filters configuration files
  ansible.builtin.find:
    path: /etc/bird/filters/prefixes
    patterns: "*.conf"
  register: bird_bgp_prefixes_filter_gen_configs_currently_installed
- name: Add currently installed bird prefixes filters configuration files to dict
  ansible.builtin.set_fact:
    bird_bgp_prefixes_filter_gen_configs_to_keep: "{{ bird_bgp_prefixes_filter_gen_configs_to_keep | default({}) | combine({item: false}) }}"
  loop: "{{ bird_bgp_prefixes_filter_gen_configs_currently_installed.files | map(attribute='path') | list }}"

- name: Configure bird prefixes filters
  ansible.builtin.include_tasks: prefixes_filters.yml
  loop: "{{ bird_bgp_irr_list }}"
  loop_control:
    loop_var: irr

- name: Ensure prometheus-bird-exporter is installed
  ansible.builtin.apt:
    name: prometheus-bird-exporter

- name: Ensure prometheus-bird-exporter arguments are up-to-date
  ansible.builtin.copy:
    content: |
      ARGS="-format.new -bird.v2"
    dest: /etc/default/prometheus-bird-exporter
    owner: root
    group: root
    mode: 0644
  notify: Restart prometheus bird exporter

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Ensure bird is enabled and started
  ansible.builtin.service:
    name: bird
    state: started
    enabled: true

- name: Remove all outdated bird BGP prefixes filters units
  ansible.builtin.file:
    path: "{{ item.key }}"
    state: absent
  when: item.value is not defined or not item.value
  loop: "{{ bird_bgp_prefixes_filter_gen_units_to_keep | d({}) | dict2items }}"

- name: Reload systemd
  ansible.builtin.systemd: # noqa no-handler
    daemon_reload: true

- name: Remove all outdated bird BGP prefixes filters configuration files
  ansible.builtin.file:
    path: "{{ item.key }}"
    state: absent
  when: item.value is not defined or not item.value
  loop: "{{ bird_bgp_prefixes_filter_gen_configs_to_keep | d({}) | dict2items }}"
