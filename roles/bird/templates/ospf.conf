{% for session in bird_ospf_sessions %}
{% set outer_loop = loop %}
{% for protocol_number in ('4', '6') %}
{% set protocol = 'v' + protocol_number %}
{% if bird_ospf_areas[protocol] | default(True) %}
protocol ospf v3 OSPF_{{ protocol | upper}}_{{ session.alias is defined | ternary(session.alias, outer_loop.index) | upper }} {
  graceful restart on;

  ipv{{ protocol_number }} {
    import all;
    export filter {
      if source = RTS_OSPF then accept;
      {% if session.export_static_routes | d(False) %}
      if source = RTS_STATIC then accept;
      {% endif %}
      reject;
    };
  };

  {% if session.instance_id is defined %}
  instance id {{ session.instance_id }};
  {% endif %}

  {% if session.stub_router | default(False) %}
  stub router yes;
  {% endif %}

  {% for key, area in session.areas.items() %}
  area {{ key }} {
    {% if area.networks is defined and protocol in area.networks %}
    networks {
    {% for network in area.networks[protocol] %}
      {{ network }};
    {% endfor %}
    };
    {% endif %}

    {% for stubnet in area.stubnets[protocol] | default({}) %}
    stubnet {{ stubnet.prefix }} {
      {% if stubnet.hidden | default(False) %}
      hidden yes;
      {% endif %}
      {% if stubnet.summary | default(False) %}
      summary yes;
      {% endif %}
      {% if stubnet.cost is defined %}
      cost {{ stubnet.cost }};
      {% endif %}
    };
    {% endfor %}

    {% for name, interface in area.interfaces.items() %}
    interface "{{ name }}" {
      {% if interface.type is defined %}
      type {{ interface.type }};
      {% endif %}
      {% if interface.cost is defined %}
      cost {{ interface.cost }};
      {% endif %}
      {% if interface.stub | default(False) %}
      stub;
      {% endif %}
      {% if interface.neighbors is defined %}
      neighbors {
        {% for neighbor in interface.neighbors %}
        {{ neighbor }};
        {% endfor %}
      }
      {% endif %}
    };
    {% endfor %}
  };
  {% endfor %}
}
{% endif %}
{% endfor %}
{% endfor %}
