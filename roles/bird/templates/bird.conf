# --- Configuration ---

define ROUTER_ID = {{ bird_router_id }};

router id ROUTER_ID;

timeformat base         iso long;
timeformat log          iso long;
timeformat protocol     iso long;
timeformat route        iso long;

log syslog all;
# debug protocols all;

protocol device {};

protocol direct {
  ipv4;
  ipv6;
}

protocol kernel kernel4 {
  {% if bird_kernel.v4.learn | default(bird_kernel.defaults.learn | default(False)) %}
  learn;
  {% endif %}
  {% if bird_kernel.v4.persist | default(bird_kernel.defaults.persist | default(False)) %}
  persist;
  {% endif %}
  {% if bird_kernel.v4.merge_paths | default(bird_kernel.defaults.merge_paths | default(False)) %}
  merge paths on;
  {% endif %}
  scan time 10;
  ipv4 {
    export filter {
      {% if bird_kernel.v4.export_filter_pre %}
      {{ bird_kernel.v4.export_filter_pre | indent(6) }}
      {%- endif %}

      {% if not bird_kernel.v4.bgp_export | default(bird_kernel.defaults.bgp_export | default(True)) %}
      if source = RTS_BGP then reject;
      {%- endif %}

      {% if not bird_kernel.v4.ospf_export | default(bird_kernel.defaults.ospf_export | default(True)) %}
      if source = RTS_OSPF then reject;
      {% endif %}

      if source = RTS_STATIC then {
        {% if bird_kernel.v4.static_export | default(bird_kernel.defaults.static_export | default(True)) %}
        accept;
        {% else %}
        reject;
        {% endif %}
      } else {
        {% if bird_bgp_preferred_source.v4 is defined %}
        krt_prefsrc = {{ bird_bgp_preferred_source.v4 }};
        {% endif %}
        accept;
      }
    };
  };
}

protocol kernel kernel6 {
  {% if bird_kernel.v6.learn | default(bird_kernel.defaults.learn | default(False)) %}
  learn;
  {% endif %}
  {% if bird_kernel.v6.persist | default(bird_kernel.defaults.persist | default(False)) %}
  persist;
  {% endif %}
  {% if bird_kernel.v6.merge_paths | default(bird_kernel.defaults.merge_paths | default(False)) %}
  merge paths on;
  {% endif %}
  scan time 10;
  ipv6 {
    export filter {
      {% if bird_kernel.v6.export_filter_pre %}
      {{ bird_kernel.v6.export_filter_pre | indent(6) }}
      {%- endif %}

      {% if not bird_kernel.v6.bgp_export | default(bird_kernel.defaults.bgp_export | default(True)) %}
      if source = RTS_BGP then reject;
      {% endif %}
      {% if not bird_kernel.v6.ospf_export | default(bird_kernel.defaults.ospf_export | default(True)) %}
      if source = RTS_OSPF then reject;
      {% endif %}

      if source = RTS_STATIC then {
        {% if bird_kernel.v6.static_export | default(bird_kernel.defaults.static_export | default(True)) %}
        accept;
        {% else %}
        reject;
        {% endif %}
      } else {
        {% if bird_bgp_preferred_source.v6 is defined %}
        krt_prefsrc = {{ bird_bgp_preferred_source.v6 }};
        {% endif %}
        accept;
      }
    };
  };
}

include "/etc/bird/static.conf";
include "/etc/bird/bgp.conf";
include "/etc/bird/ospf.conf";
include "/etc/bird/radv.conf";
