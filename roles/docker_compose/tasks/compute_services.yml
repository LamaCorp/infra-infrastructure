---
- name: Compute services secrets
  ansible.builtin.set_fact:
    docker_compose_services_secrets_computed: |
      {% for service in docker_compose_services | dict2items %}
      {% if service.value.secrets | d([]) | length > 0 %}
      {{ service.key }}:
        environment:
        {% for secret in service.value.secrets %}
          {{ docker_compose_secrets[secret].env }}: /run/secrets/{{ secret }}
        {% endfor %}
        # leave this comment in for proper indentation in templates
      {% endif %}
      {% endfor %}

- name: Set services sysctl to enable IPv6
  ansible.builtin.set_fact:
    docker_compose_services_sysctl_ipv6_computed: |
      {% for service in docker_compose_services | dict2items %}
      {% if service.value.network_mode | default('') != 'host' %}
      {{ service.key }}:
        sysctls:
          net.ipv6.conf.all.disable_ipv6: 0
      {% endif %}
      {% endfor %}

- name: Set services restart policy
  ansible.builtin.set_fact:
    docker_compose_services_restart_policy_computed: |
      {% for service in docker_compose_services | dict2items %}
      {{ service.key }}:
        restart: {{ service.value.restart | default(docker_compose_restart_policy) }}
      {% endfor %}

- name: Compute services generated attributes
  ansible.builtin.set_fact:
    docker_compose_services_computed: "{{ docker_compose_services_secrets_computed | from_yaml | combine(docker_compose_services_sysctl_ipv6_computed | from_yaml, recursive=True) | combine(docker_compose_services_restart_policy_computed | from_yaml, recursive=True) | combine(docker_compose_services, recursive=True, list_merge='append') }}"

- name: Compute services
  ansible.builtin.set_fact:
    docker_compose_services_computed: "{{ dict(docker_compose_services_computed.keys() | zip(docker_compose_services_computed.values())) }}"

- name: Prefix services with project name
  ansible.builtin.set_fact:
    docker_compose_services_computed: "{{ dict([docker_compose_project_name] | product(docker_compose_services_computed.keys()) | map('join', '_') | zip(docker_compose_services_computed.values())) }}"
