---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault
spec:
  provider:
    vault:
      server: https://vault.lama.tel
      path: k8s-k3s.fsn.lama.tel
      auth:
        kubernetes:
          mountPath: k8s-k3s.fsn.lama.tel
          role: common
          serviceAccountRef:
            name: default
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-authentik
spec:
  provider:
    vault:
      server: https://vault.lama.tel
      path: authentik
      auth:
        kubernetes:
          mountPath: k8s-k3s.fsn.lama.tel
          role: common
          serviceAccountRef:
            name: default
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-global
spec:
  provider:
    vault:
      server: https://vault.lama.tel
      path: k8s-global
      auth:
        kubernetes:
          mountPath: k8s-k3s.fsn.lama.tel
          role: common
          serviceAccountRef:
            name: default
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: thanos-objstore
spec:
  secretStoreRef:
    kind: SecretStore
    name: vault-global
  target:
    template:
      engineVersion: v2
      data:
        objstore.yml: |
          type: S3
          config:
            bucket: thanos
            endpoint: s3.lama-corp.space
            access_key: {{ .access_key }}
            secret_key: {{ .secret_key }}
  dataFrom:
    - extract:
        key: /infra-observability/s3-thanos
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: loki-s3-credentials
spec:
  secretStoreRef:
    kind: SecretStore
    name: vault
  target:
    template:
      engineVersion: v2
      data:
        AWS_ACCESS_KEY_ID: "{{ .access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ .secret_key }}"
  dataFrom:
    - extract:
        key: /infra-observability/s3-loki
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: loki-auth-map
spec:
  secretStoreRef:
    kind: SecretStore
    name: vault
  dataFrom:
    - extract:
        key: /infra-observability/loki-auth-map
---
apiVersion: generators.external-secrets.io/v1alpha1
kind: VaultDynamicSecret
metadata:
  name: vault-grafana-postgres-credentials
spec:
  path: /postgres/static-creds/postgresql.fsn.lama.tel_k3s.fsn.lama.tel_infra-observability_grafana
  method: GET
  provider:
    server: https://vault.lama.tel
    auth:
      kubernetes:
        mountPath: k8s-k3s.fsn.lama.tel
        role: common
        serviceAccountRef:
          name: default
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-postgres-credentials
spec:
  refreshInterval: 1h
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: VaultDynamicSecret
          name: vault-grafana-postgres-credentials
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-oauth-credentials
spec:
  secretStoreRef:
    kind: SecretStore
    name: vault-authentik
  dataFrom:
    - extract:
        key: /providers/oauth2/k8s/k3s.fsn.lama.tel/infra-observability/grafana
