---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: infra-observability-thanos
  labels:
    app: infra-observability-thanos
spec:
  project: infra
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
  destination:
    name: k3s.fsn.lama.tel
    namespace: infra-observability
  source:
    repoURL: registry-1.docker.io/bitnamicharts
    targetRevision: 16.0.3
    chart: thanos
    helm:
      releaseName: thanos
      values: |
        clusterDomain: c.k3s.fsn.lama.tel
        existingObjstoreSecret: thanos-objstore

        compactor:
          enabled: true
          annotations:
            secret.reloader.stakater.com/reload: thanos-objstore
          retentionResolutionRaw: 30d
          retentionResolution5m: 90d
          retentionResolution1h: 0d
          extraFlags:
            - --deduplication.func=penalty
            - --compact.enable-vertical-compaction
            - --deduplication.replica-label=prometheus_replica
            - --hash-func=SHA256
          persistence:
            size: 10Gi

        storegateway:
          enabled: true
          annotations:
            secret.reloader.stakater.com/reload: thanos-objstore

        query:
          enabled: true
          dnsDiscovery:
            sidecarsService: kube-prometheus-stack-thanos-discovery
            sidecarsNamespace: core-observability
          replicaLabel:
            - prometheus_replica

        bucketweb:
          enabled: true
          annotations:
            secret.reloader.stakater.com/reload: thanos-objstore
          ingress:
            enabled: true
            hostname: thanos-bucketweb.lama.tel
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod-http01
              nginx.ingress.kubernetes.io/auth-url: |-
                http://ak-outpost-proxy-outpost-lamatel.services-authentik.svc.c.k3s.fsn.lama.tel:9000/outpost.goauthentik.io/auth/nginx
              nginx.ingress.kubernetes.io/auth-signin: |-
                https://thanos-bucketweb.lama.tel/outpost.goauthentik.io/start?rd=$escaped_request_uri
              nginx.ingress.kubernetes.io/auth-response-headers: |-
                Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
              nginx.ingress.kubernetes.io/auth-snippet: |
                proxy_set_header X-Forwarded-Host $http_host;
            tls: true

        queryFrontend:
          enabled: true
          ingress:
            enabled: true
            hostname: thanos.lama.tel
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod-http01
            tls: true

        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
          prometheusRule:
            enabled: true
            default:
              create: true
              disabled:
                # We're not using the receiver nor the ruler
                ThanosReceiveIsDown: true
                ThanosRuleIsDown: true
                # This is handled by kube-prometheus-stack
                ThanosSidecarIsDown: true
                ThanosCompactIsDown: true
                ThanosStoreIsDown: true
