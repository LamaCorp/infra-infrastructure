---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-vmks
  labels:
    app: core-observability
spec:
  goTemplate: true
  generators:
    - clusters: {}
  template:
    metadata:
      name: core-vmks-{{ .name }}
      labels:
        app: core-observability
    spec:
      project: default
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - RespectIgnoreDifferences=true
        automated:
          prune: true
      destination:
        name: "{{ .name }}"
        namespace: core-observability
      source:
        repoURL: https://victoriametrics.github.io/helm-charts
        targetRevision: 0.45.0
        chart: victoria-metrics-k8s-stack
        helm:
          releaseName: vmks
          values: |
            fullnameOverride: vmks

            global:
              cluster:
                dnsDomain: "c.{{ .name }}."

            victoria-metrics-operator:
              fullnameOverride: vm-operator
              operator:
                disable_prometheus_converter: false
                prometheus_converter_add_argocd_ignore_annotations: false
                enable_converter_ownership: true

            defaultDashboards:
              enabled: true
              labels:
                grafana_dashboard: "1"
              annotations:
                argocd.argoproj.io/sync-options: ServerSideApply=true
            defaultRules:
              create: true
              groups:
                vmcluster:
                  create: false

            vmsingle:
              enabled: {{ ne .name "k3s.fsn.as212024.net" }}
              spec:
                retentionPeriod: 7d
                replicaCount: 1
                useStrictSecurity: true
                extraArgs:
                  enableTCP6: "true"
                  maxLabelsPerTimeseries: "100"
                storage:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 10Gi
            vmagent:
              enabled: true
              additionalRemoteWrites:
                - url: http://vmsingle-vm.infra-observability.svc:8429/api/v1/write
              spec:
                useStrictSecurity: true
                extraArgs:
                  enableTCP6: "true"

            vmalert:
              enabled: true
              spec:
                {{- if eq .name "k3s.fsn.as212024.net" }}
                remoteRead:
                  url: http://vmsingle-vm.infra-observability.svc:8429
                remoteWrite:
                  url: http://vmsingle-vm.infra-observability.svc:8429/api/v1/write
                datasource:
                  url: http://vmsingle-vm.infra-observability.svc:8429
                {{- end }}
                useStrictSecurity: true
                extraArgs:
                  enableTCP6: "true"

            alertmanager:
              enabled: true
              annotations:
                secret.reloader.stakater.com/reload: alertmanager-discord-webhooks
              spec:
                replicaCount: 1
                useStrictSecurity: true
                secrets:
                  - alertmanager-discord-webhooks
              useManagedConfig: false
              config:
                route:
                  group_by:
                    - namespace
                    - alertgroup
                    - alertname
                    - job
                  routes:
                    - matchers:
                        - severity =~ "info|warning"
                      repeat_interval: 7d
                      receiver: discord-infra-alerts
                    - matchers:
                        - severity =~ "critical"
                      repeat_interval: 6h
                      receiver: discord-infra-critical-alerts
                    - matchers:
                        - severity =~ "disaster"
                      repeat_interval: 1h
                      receiver: discord-infra-critical-alerts
                inhibit_rules:
                  - target_matchers:
                      - severity=~"warning|info"
                    source_matchers:
                      - severity=critical
                    equal:
                      - cluster
                      - namespace
                      - alertname
                  - target_matchers:
                      - severity=info
                    source_matchers:
                      - severity=warning
                    equal:
                      - cluster
                      - namespace
                      - alertname
                  - target_matchers:
                      - severity=info
                    source_matchers:
                      - alertname=InfoInhibitor
                    equal:
                      - cluster
                      - namespace
                receiver: blackhole
                receivers:
                  - name: blackhole
                  - name: discord-infra-alerts
                    slack_configs:
                      - api_url_file: /etc/vm/secrets/alertmanager-discord-webhooks/infra-alerts
                        title: '{{ "{{ template \"slack.monzo.title\" . }}" }}'
                        color: '{{ "{{ template \"slack.monzo.color\" . }}" }}'
                        text: '{{ "{{ template \"slack.monzo.text\" . }}" }}'
                  - name: discord-infra-critical-alerts
                    slack_configs:
                      - api_url_file: /etc/vm/secrets/alertmanager-discord-webhooks/infra-critical-alerts
                        send_resolved: true
                        title: '{{ "{{ template \"slack.monzo.title\" . }}" }}'
                        color: '{{ "{{ template \"slack.monzo.color\" . }}" }}'
                        text: '{{ "{{ template \"slack.monzo.text\" . }}" }}'

            vmcluster:
              enabled: false
            vmauth:
              enabled: false

            prometheus-node-exporter:
              enabled: false
            grafana:
              enabled: false
      ignoreDifferences:
        - group: ""
          kind: Secret
          name: vm-operator-validation
          namespace: core-observability
          jsonPointers:
            - /data
        - group: admissionregistration.k8s.io
          kind: ValidatingWebhookConfiguration
          name: vm-operator-admission
          jqPathExpressions:
            - ".webhooks[]?.clientConfig.caBundle"
